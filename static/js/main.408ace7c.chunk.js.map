{"version":3,"sources":["logo.svg","components/Post/CreatePostDialog.js","components/Layout/Header.js","components/Post/Comment.js","components/Post/CommentForm.js","components/Post/LikeButton.js","components/Post/PostDialog.js","components/Post/PostList.js","components/Layout/Index.js","pages/HomePage.js","pages/LoginPage.js","pages/RegisterPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","textfield","width","button","margin","spacing","card","display","transitionDuration","image","minWidth","content","padding","objectFit","DialogContent","withStyles","root","MuiDialogContent","CreatePostDialog","classes","React","useState","open","setOpen","text","setText","redirectToReferrer","setRedirectToReferrer","handleClose","useHistory","to","Button","color","onClick","Dialog","maxWidth","fullWidth","onClose","scroll","dividers","IconButton","aria-label","className","closeButton","Grid","item","sm","noValidate","autoComplete","onSubmit","event","preventDefault","token","localStorage","getItem","alert","header","headers","axios","post","then","res","window","location","reload","catch","err","TextField","id","label","variant","value","onChange","target","multiline","rows","type","endIcon","size","grow","flexGrow","menuButton","marginRight","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","Header","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","history","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","renderMobileMenu","Badge","aria-controls","aria-haspopup","AppBar","Toolbar","edge","InputBase","placeholder","input","inputProps","component","Link","removeItem","push","commentImage","commentData","Comments","Container","map","comment","key","timestamp","Card","style","src","alt","Typography","owner","substr","variabnt","CommentForm","postID","Number","console","log","LikeButton","liked","setLiked","error","cardStyles","DialogTitle","deleteButton","right","top","grey","props","username","other","disableTypography","delete","PostDialog","postData","comments","setComments","handleOpen","get","params","data","CardContent","ButtonBase","numOfLikes","numOfComments","length","disabled","Comment","PostList","getAllPostsData","setState","posts","state","this","xs","Component","Layout","container","direction","justify","marginTop","HomePage","LoginPage","handleSubmit","email","password","setAuth","CssBaseline","paper","Avatar","avatar","form","required","name","autoFocus","FormControlLabel","control","Checkbox","submit","href","flexDirection","secondary","main","RegisterPage","App","setAuthDetails","setItem","exact","path","render","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.408ace7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState} from 'react';\nimport axios from 'axios';\n\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport {Redirect, useHistory} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        width: \"90%\"\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    card: {\n        display: 'block',\n        width: '50vw',\n        transitionDuration: '0.3s',\n    },\n    image: {\n        minWidth: 200\n    },\n    content: {\n        padding: 25,\n        objectFit: 'cover'\n    }\n}));\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nfunction CreatePostDialog() {\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n    const [text, setText] = useState(\"\");\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n\n    const history = useHistory();\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChange = (event) => {\n        setText(event.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        let token = localStorage.getItem(\"token\")\n        if (!token) {\n            alert(\"Please login to create a new post\");\n            setRedirectToReferrer(true);\n            return;\n        }\n\n        let header = {headers: {\"Authorization\": `JWT ${token}`}};\n\n        axios\n            .post(\"createPost/\", {\"content\": text}, header=header)\n            .then(res => window.location.reload())\n            .catch(err => alert(err));\n\n        handleClose();\n    };\n\n    if (redirectToReferrer === true)\n        return (<Redirect to=\"/login\" />);\n\n    return (\n        <div>\n            <Button color=\"inherit\" onClick={handleOpen}>\n                New Post\n            </Button>\n            <Dialog\n                maxWidth=\"80%\"\n                fullWidth={true}\n                onClose={handleClose}\n                scroll=\"paper\"\n                open={open}\n            >\n                <DialogContent dividers>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Grid item sm={12}>\n                        <form noValidate autoComplete={false} onSubmit={handleSubmit}>\n                            <TextField\n                                id=\"content\"\n                                label=\"Content\"\n                                variant=\"outlined\"\n                                value={text}\n                                onChange={handleChange}\n                                fullWidth={true}\n                                className={classes.textfield}\n                                multiline\n                                rows={5}\n                            />\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                endIcon={<SendIcon />}\n                                size=\"large\"\n                            >\n                                Send\n                            </Button>\n                        </form>\n                    </Grid>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default CreatePostDialog;","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport {Link} from \"react-router-dom\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nimport CreatePostDialog from '../Post/CreatePostDialog'\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nfunction Header() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const history = useHistory();\n    const token = localStorage.getItem(\"token\");\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userID');\n        history.push('/');\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton color=\"inherit\">\n                    <Badge color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton color=\"inherit\">\n                    <Badge color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <CreatePostDialog>\n                        New Post\n                    </CreatePostDialog>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton color=\"inherit\">\n                            <Badge color=\"secondary\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton color=\"inherit\">\n                            <Badge color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                    {\n                        token == null ?\n                        <Button\n                            color=\"inherit\"\n                            component={Link}\n                            to={\"/login\"}\n                        >\n                            Login\n                        </Button> :\n                        <Button\n                            color=\"inherit\"\n                            onClick={handleLogout}\n                        >\n                            Logout\n                        </Button>\n                    }\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    // ...theme,\n    commentImage: {\n        maxWidth: '100%',\n        width: 30,\n        height: 30,\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    commentData: {\n        width: '85vw',\n        padding: 25,\n        margin: 10,\n    }\n}));\n\nfunction Comments({ commentData }) {\n    const classes = useStyles();\n\n    return (\n        <Grid Container>\n            {commentData.map((comment) => {\n                return(\n                    <Fragment key={comment.timestamp}>\n                        <Grid sm={12}>\n                            <Grid Container>\n                                <Grid item sm={9}>\n                                    <Card className={classes.commentData}>\n                                        <div style={{ display: \"flex\", alignItems: 'baseline' }}>\n                                            <img\n                                                src={\"https://upload.wikimedia.org/wikipedia/commons/7/7c/User_font_awesome.svg\"}\n                                                alt=\"comment\"\n                                                className={classes.commentImage}\n                                            />\n                                            &nbsp;\n                                            &nbsp;\n                                            <Typography\n                                                variant=\"body1\"\n                                                component={Link}\n                                                to={`/users/${comment.owner}`}\n                                                color=\"primary\"\n                                            >\n                                                {comment.owner}\n                                            </Typography>\n                                            &nbsp;\n                                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                                {comment.timestamp.substr(0, 10)}\n                                                &nbsp;\n                                                {comment.timestamp.substr(11, 5)}\n                                            </Typography>\n                                        </div>\n                                        <Typography variabnt=\"body1\">\n                                            {comment.content}\n                                        </Typography>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Fragment>\n                );\n            })}\n        </Grid>\n    );\n}\n\nexport default Comments;","import React, {useState} from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        width: \"90%\"\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction CommentForm({ postID }) {\n    const classes = useStyles();\n\n    const [text, setText] = useState(\"\");\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n\n    const handleChange = (event) => {\n        setText(event.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let token = localStorage.getItem(\"token\");\n        if (text !== \"\") {\n            let header = {headers: {\"Authorization\": `JWT ${token}`}};\n            axios\n                .post(\"createComment/\", {\"post_id\": Number(postID), \"content\": text}, header=header)\n                .then((res) => console.log(res))\n                .catch(err => {\n                    alert(\"Please login first\");\n                    setRedirectToReferrer(true);\n                });\n        } else {\n            alert(\"Comment cannot be empty\");\n        }\n    };\n\n    if (redirectToReferrer === true)\n        return (<Redirect to=\"/login\" />);\n\n    return (\n        <Grid item sm={12}>\n            <form noValidate autoComplete={false} onSubmit={handleSubmit}>\n                <TextField\n                    id=\"comment\"\n                    label=\"Comment\"\n                    variant=\"outlined\"\n                    value={text}\n                    onChange={handleChange}\n                    fullWidth={true}\n                    className={classes.textfield}\n                />\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    endIcon={<SendIcon />}\n                    size=\"large\"\n                >\n                    Send\n                </Button>\n            </form>\n        </Grid>\n    );\n}\n\nexport default CommentForm;","import React, {useState} from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\n\nimport Button from '@material-ui/core/Button';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n\nfunction LikeButton({ postID }) {\n    const [liked, setLiked] = useState(false);\n\n    const handleLike = () => {\n        try {\n            let token = localStorage.getItem(\"token\");\n            let header = {headers: {\"Authorization\": `JWT ${token}`}};\n            axios\n                .post(\"like/\", {\"post_id\": postID}, header=header)\n                .then((res) => console.log(res))\n                .catch((res) => console.log(res));\n            setLiked(!liked);\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n    return (\n        <Button onClick={handleLike}>\n            {!liked ? <FavoriteBorder color={\"primary\"} /> : <FavoriteIcon color={\"primary\"} />}\n        </Button>\n    )\n}\n\nexport default LikeButton;","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Comments from \"./Comment\";\nimport CommentForm from './CommentForm';\nimport LikeButton from \"./LikeButton\";\nimport {Link, Redirect} from \"react-router-dom\";\n\n\nconst titleStyles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    deleteButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(7)\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    image: {\n        width: '4vw',\n        height: '4vw',\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n});\n\nconst cardStyles = {\n    card: {\n        display: 'block',\n        width: '50vw',\n        transitionDuration: '0.3s',\n    },\n    image: {\n        minWidth: 200\n    },\n    content: {\n        padding: 25,\n        objectFit: 'cover'\n    }\n};\n\nconst DialogTitle = withStyles(titleStyles)((props) => {\n    const { postID, username, timestamp, classes, onClose, ...other } = props;\n    const history = useHistory();\n\n    const handleDelete = () => {\n        let token = localStorage.getItem(\"token\");\n        let header = {headers: {\"Authorization\": `JWT ${token}`}};\n        axios\n            .delete(`deletePost/${postID}`, header)\n            .then((res) => console.log(res))\n            .then(res => window.location.reload())\n            .catch(err => alert(\"You are not allowed to delete this post\"));\n    }\n\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <div>\n                <img\n                    src={\"https://upload.wikimedia.org/wikipedia/commons/7/7c/User_font_awesome.svg\"}\n                    alt=\"comment\"\n                    className={classes.image}\n                />\n                &nbsp;\n                &nbsp;\n                <Typography variant=\"h6\" component={Link} to={`/users/${username}`}>\n                    {username}\n                </Typography>\n                &nbsp;\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    {timestamp.substr(0, 10)} {timestamp.substr(11, 5)}\n                </Typography>\n                <Button className={classes.deleteButton} onClick={handleDelete}>\n                    <DeleteIcon color={\"primary\"} />\n                </Button>\n            </div>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nfunction PostDialog({ postData }) {\n    const [open, setOpen] = React.useState(false);\n    const [comments, setComments] = React.useState([]);\n\n    const handleOpen = () => {\n        axios\n            .get(\"getComments\", {\n                params: {\n                    \"post_id\": postData.id\n                }\n            })\n            .then((res) => setComments(res.data));\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Card style={cardStyles.card}>\n                <CardContent style={cardStyles.content}>\n                    <div>\n                        <img\n                            src={\"https://upload.wikimedia.org/wikipedia/commons/7/7c/User_font_awesome.svg\"}\n                            alt=\"comment\"\n                            style={{\n                                maxWidth: '100%',\n                                width: 30,\n                                height: 30,\n                                objectFit: 'cover',\n                                borderRadius: '50%'\n                            }}\n                        />\n                        &nbsp;\n                        &nbsp;\n                        <Typography variant=\"body2\" component={Link} to={`/users/${postData.owner}`}>\n                            {postData.owner}\n                        </Typography>\n                        &nbsp;\n                        <Typography variant=\"caption\" color=\"textSecondary\">\n                            {postData.timestamp.substr(0, 10)} {postData.timestamp.substr(11, 5)}\n                        </Typography>\n                    </div>\n                </CardContent>\n                <ButtonBase onClick={handleOpen}>\n                    <CardContent style={cardStyles.content}>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {postData.content}\n                        </Typography>\n                    </CardContent>\n                </ButtonBase>\n                <CardContent style={cardStyles.content}>\n                    <LikeButton postID={postData.id} />\n                    <span>{postData.numOfLikes}</span>\n                    <Button onClick={handleOpen}>\n                        <ChatIcon color={\"primary\"} />\n                    </Button>\n                    <span>{postData.numOfComments}</span>\n                </CardContent>\n            </Card>\n            <Dialog\n                maxWidth=\"80%\"\n                fullWidth={true}\n                onClose={handleClose}\n                scroll=\"paper\"\n                open={open}\n            >\n                <DialogTitle\n                    postID={postData.id}\n                    username={postData.owner}\n                    timestamp={postData.timestamp}\n                    onClose={handleClose}\n                />\n                <DialogContent dividers>\n                    <Typography\n                        variant={postData.content.length < 200 ? \"h4\" : \"body1\"}\n                        color=\"textPrimary\"\n                        component=\"p\">\n                        {postData.content}\n                    </Typography>\n                    <LikeButton postID={postData.id} />\n                    <span>{postData.numOfLikes}</span>\n                    <Button disabled={true}>\n                        <ChatIcon color={\"primary\"} />\n                    </Button>\n                    <span>{postData.numOfComments}</span>\n                </DialogContent>\n                <DialogContent dividers>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                        Comments:\n                    </Typography>\n                    <Comments commentData={comments} />\n                </DialogContent>\n                <DialogContent dividers>\n                    <CommentForm postID={postData.id} />\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default PostDialog;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nimport PostDialog from \"./PostDialog\";\n\n\nconst styles = {\n    card: {\n        display: 'block',\n        width: '50vw',\n        transitionDuration: '0.3s',\n    },\n    image: {\n        minWidth: 200\n    },\n    content: {\n        padding: 25,\n        objectFit: 'cover'\n    }\n  };\n\nclass PostList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: []\n        };\n    }\n\n    componentDidMount() {\n        this.getAllPostsData();\n    }\n\n    getAllPostsData = () => {\n        axios\n        .get(\"allPosts\")\n        .then((res) => this.setState({posts: res.data}))\n        .catch(err => console.log(err));\n        console.log(this.state.posts);\n    }\n\n    render() {\n        return (\n                this.state.posts.map(\n                    (post) =>\n                    <Grid item xs={12}>\n                        <PostDialog postData={post} />\n                    </Grid>\n                )\n        );\n    }\n}\n\nexport default PostList;","import React from 'react';\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Header from './Header';\nimport PostList from \"../Post/PostList\";\n\nfunction Layout() {\n    return (\n        <div>\n            <div>\n            <Header />\n            </div>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={3}\n                style={{\n                marginTop: \"5%\"\n                }}\n            >\n                <PostList />\n            </Grid>\n        </div>\n    );\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\n\nimport Layout from \"../components/Layout/Index\";\n\n\nclass HomePage extends Component {\n\n    render() {\n        return (\n            <Layout />\n        )\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass LoginPage extends Component {\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const email = event.target[0].value;\n        const password = event.target[2].value;\n\n        if (!email || !password) {\n            alert(\"Please enter email and password to sign in!\");\n            return;\n        }\n\n        axios\n            .post(\"login/\", {\"email\": email, \"password\": password})\n            .then(res => {\n                console.log(res);\n                this.props.setAuth(res.data.token, res.data.id);\n            })\n            .catch(err => alert(err));\n\n        this.props.history.push('/');\n    };\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Forgot password?\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link href=\"/register\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(LoginPage);","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles';\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass RegisterPage extends Component {\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const username = event.target[0].value;\n        const email = event.target[2].value;\n        const password = event.target[4].value;\n\n        if (!username || !email || !password) {\n            alert(\"Please enter username, email and password to sign up!\");\n            return;\n        }\n\n        axios\n            .post(\"register/\", {\"email\": email, \"username\": username, \"password\": password})\n            .then(res => {\n                axios\n                    .post(\"login/\", {\"email\": email, \"password\": password})\n                    .then(res => this.props.setAuth(res.data.token, res.data.id))\n                    .catch(err => alert(err));\n            })\n            .catch(err => alert(err));\n\n        this.props.history.push('/');\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    autoComplete=\"username\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/login\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(RegisterPage);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nimport HomePage from './pages/HomePage'\nimport LoginPage from './pages/LoginPage'\nimport RegisterPage from \"./pages/RegisterPage\";\n\n\nfunction App() {\n    const [authDetails, setAuthDetails] = React.useState(\n        localStorage.getItem('token')\n    );\n\n    function setAuth(token, id) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('userID', id);\n        setAuthDetails(token);\n    }\n\n    return (\n    <MuiThemeProvider>\n          <Router>\n              <Switch>\n                  <Route exact path=\"/\" component={HomePage} />\n              </Switch>\n              <Switch>\n                  <Route\n                      exact\n                      path=\"/login\"\n                      render={(props) => {\n                          return <LoginPage {...props} setAuth={setAuth} />;\n                      }}\n                  />\n              </Switch>\n              <Switch>\n                  <Route\n                      exact\n                      path=\"/register\"\n                      render={(props) => {\n                          return <RegisterPage {...props} setAuth={setAuth} />;\n                      }}\n                  />\n              </Switch>\n          </Router>\n      </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}